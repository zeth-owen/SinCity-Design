{"ast":null,"code":"var _jsxFileName = \"/Users/zeththomas/Documents/sincity-media/client/src/photography/PhotoShowPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport StarRating from '../websites/StarRating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoShowPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [photo, setPhoto] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [rating, setRating] = useState(0);\n  const [accessDenied, setAccessDenied] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPhoto = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`https://api.unsplash.com/photos/${id}`, {\n          headers: {\n            Authorization: `Client-ID ${process.env.ACCESS_KEY}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch photo: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        setPhoto(data);\n      } catch (error) {\n        console.error('Error fetching photo:', error);\n        setError('Error fetching photo. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/comments?photoId=${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchPhoto();\n    fetchComments();\n  }, [id]);\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setAccessDenied(true);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:4000/photos/${id}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          comment: newComment,\n          rating\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit comment');\n      }\n      const data = await response.json();\n      setComments(prevComments => [...prevComments, data]);\n      setNewComment('');\n      setRating(0);\n      setAccessDenied(false); // Reset access denied state\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  };\n  const navigateBack = () => {\n    history.push('/photos'); // Adjust the path as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-page-container\",\n    children: photo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-page-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: photo.alt_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"template-image\",\n        src: photo.urls.regular,\n        alt: photo.alt_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n        rating: rating,\n        onRating: rate => setRating(rate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Rating: \", rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"comments-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), accessDenied && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: \"Access Denied: You must be logged in to submit a comment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-list\",\n          children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: navigateBack,\n        children: \"Back to Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error || 'Photo not found.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoShowPage, \"/m9uDIWdETD6/7y6D1wkdHwoea0=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = PhotoShowPage;\nexport default PhotoShowPage;\nvar _c;\n$RefreshReg$(_c, \"PhotoShowPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","StarRating","jsxDEV","_jsxDEV","PhotoShowPage","_s","id","history","photo","setPhoto","comments","setComments","newComment","setNewComment","rating","setRating","accessDenied","setAccessDenied","loading","setLoading","error","setError","fetchPhoto","response","fetch","headers","Authorization","process","env","ACCESS_KEY","ok","Error","status","statusText","data","json","console","fetchComments","handleCommentSubmit","e","preventDefault","token","localStorage","getItem","method","body","JSON","stringify","comment","prevComments","navigateBack","push","className","children","alt_description","fileName","_jsxFileName","lineNumber","columnNumber","src","urls","regular","alt","onRating","rate","onSubmit","value","onChange","target","placeholder","type","map","onClick","_c","$RefreshReg$"],"sources":["/Users/zeththomas/Documents/sincity-media/client/src/photography/PhotoShowPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport StarRating from '../websites/StarRating';\n\nconst PhotoShowPage = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const [photo, setPhoto] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [rating, setRating] = useState(0);\n  const [accessDenied, setAccessDenied] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPhoto = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const response = await fetch(`https://api.unsplash.com/photos/${id}`, {\n          headers: {\n            Authorization: `Client-ID ${process.env.ACCESS_KEY}`\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch photo: ${response.status} ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        setPhoto(data);\n      } catch (error) {\n        console.error('Error fetching photo:', error);\n        setError('Error fetching photo. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/comments?photoId=${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch comments');\n        }\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n\n    fetchPhoto();\n    fetchComments();\n  }, [id]);\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setAccessDenied(true);\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:4000/photos/${id}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ comment: newComment, rating })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to submit comment');\n      }\n\n      const data = await response.json();\n      setComments((prevComments) => [...prevComments, data]);\n      setNewComment('');\n      setRating(0);\n      setAccessDenied(false); // Reset access denied state\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  };\n\n  const navigateBack = () => {\n    history.push('/photos'); // Adjust the path as needed\n  };\n\n  return (\n    <div className=\"show-page-container\">\n      {photo ? (\n        <div className=\"show-page-content\">\n          <h1>{photo.alt_description}</h1>\n          <img className=\"template-image\"src={photo.urls.regular} alt={photo.alt_description} />\n\n          <StarRating rating={rating} onRating={(rate) => setRating(rate)} />\n          <p>Average Rating: {rating}</p>\n\n          <section className=\"comments-section\">\n            <h2>Comments</h2>\n            {accessDenied && <p className=\"error-message\">Access Denied: You must be logged in to submit a comment.</p>}\n            <form onSubmit={handleCommentSubmit}>\n              <textarea\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n                placeholder=\"Add a comment\"\n              ></textarea>\n              <button type=\"submit\">Submit</button>\n            </form>\n            <div className=\"comments-list\">\n              {comments.map((comment) => (\n                <div key={comment.id}>\n                  <p>{comment.comment}</p>\n                </div>\n              ))}\n            </div>\n          </section>\n\n          {/* \"Back to Photos\" button */}\n          <button className=\"back-button\" onClick={navigateBack}>Back to Photos</button>\n        </div>\n      ) : loading ? (\n        <p>Loading...</p>\n      ) : (\n        <p>{error || 'Photo not found.'}</p>\n      )}\n    </div>\n  );\n};\n\nexport default PhotoShowPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}