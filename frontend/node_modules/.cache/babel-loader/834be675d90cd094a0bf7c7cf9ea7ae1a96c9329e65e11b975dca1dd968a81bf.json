{"ast":null,"code":"var _jsxFileName = \"/Users/zeththomas/Documents/sincity-design/frontend/src/Animation.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Animation() {\n  _s();\n  const canvasRef = useRef(null); // Ref for canvas element\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Adjust canvas dimensions\n    const body = document.body;\n    canvas.width = body.clientWidth * 0.5;\n    canvas.height = body.clientHeight * 0.6;\n\n    // Example drawing on canvas\n    context.fillStyle = 'red';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Cleanup (optional): Return a function to clean up resources when component unmounts\n    return () => {\n      // Clean up code here if needed\n    };\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Animation, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Animation;\nexport default Animation;\nvar _c;\n$RefreshReg$(_c, \"Animation\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Animation","_s","canvasRef","canvas","current","context","getContext","body","document","width","clientWidth","height","clientHeight","fillStyle","fillRect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeththomas/Documents/sincity-design/frontend/src/Animation.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nfunction Animation() {\n  const canvasRef = useRef(null); // Ref for canvas element\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Adjust canvas dimensions\n    const body = document.body;\n    canvas.width = body.clientWidth * 0.5;\n    canvas.height = body.clientHeight * 0.6;\n\n    // Example drawing on canvas\n    context.fillStyle = 'red';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Cleanup (optional): Return a function to clean up resources when component unmounts\n    return () => {\n      // Clean up code here if needed\n    };\n  }, []); // Empty dependency array to run effect only once on mount\n\n  return (\n    <canvas ref={canvasRef}></canvas>\n  );\n}\n\nexport default Animation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhCC,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEvC;IACA,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1BJ,MAAM,CAACM,KAAK,GAAGF,IAAI,CAACG,WAAW,GAAG,GAAG;IACrCP,MAAM,CAACQ,MAAM,GAAGJ,IAAI,CAACK,YAAY,GAAG,GAAG;;IAEvC;IACAP,OAAO,CAACQ,SAAS,GAAG,KAAK;IACzBR,OAAO,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEX,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACQ,MAAM,CAAC;;IAEnD;IACA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEZ,OAAA;IAAQgB,GAAG,EAAEb;EAAU;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAErC;AAAClB,EAAA,CAzBQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA2BlB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}